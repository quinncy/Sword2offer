
void PrintFromTopToBottom(BinaryTreeNode * pTreeRoot)
{
	if(!pTreeRoot)
	{
		return;
	}
	
	std::deque<BinaryTreeNode *> dequeTreeNode;
	
	dequeTreeNode.push_back(pTreeRoot());
	
	while(dequeTreeNode.size())//队列不为空
	{
		BinaryTreeNode * pNode = dequeTreeNode.front();//取出队头
		dequeTreeNode.pop_front();//队列队头出列
		
		printf("%d," pNode -> m_nValue);
		
		if(pNode -> m_pLeft)
			dequeTreeNode.push_back(pNode -> m_pLeft);
			
		if(pNode -> m_pRight)
			dequeTreeNode.push_back(pNode -> m_pRight);
	}  
}