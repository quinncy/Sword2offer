
const int g_MaxNumberLength = 10;

char * g_StrCombine1 = new char[g_MaxNumberLength * 2 + 1];
char * g_StrCombine2 = new char[g_MaxNumberLength * 2 + 1];

void PrintMinNumber(int * numbers, int length)
{
	if(numbers == NULL || length <= 0)
		return;
		
	char ** strNumbers = (char **)(new int[length]);
	
	for(int i = 0; i < length; ++i)
	{
		strNumbers[i] = new char[g_MaxNumberLength + 1];
		sprintf(strNumbers[i], "%d", numbers[i]);
	}
	
	qsort(strNumbers, length, sizeof(char *), compare);
	
	for(int i = 0; i < length; ++i)
	{
		printf("%s", strNumbers[i]);
	}
	
	for(int i = 0; i < length; ++i)
	{
		delete[] strNumbers[i];
	}
	
	delete[] strNumbers;
	
}

int compare(const void * strNumbers1, const void * strNumbers2)
{
	strcpy(g_StrCombine1,  *(const char **)strNumbers1);
	strcat(g_StrCombine1,  *(const char **)strNumbers2);
	
	strcpy(g_StrCombine2,  *(const char **)strNumbers2);
	strcat(g_StrCombine2,  *(const char **)strNumbers1);	
	
	return strcmp(g_StrCombine1, g_StrCombine2);
}