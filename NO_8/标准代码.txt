
int Min(int * numbers, int length)
{
	if(numbers == NULL || length <= 0)
		printf("invalid input");
		
	int index1 = 0;
	int index2 = length - 1;
	int indexMid = index1;//如果数组本身已排序，那么直接返回第一个元素
	
	while(numbers[index1] >= numbers[index2])
	{
		if(index2 - 1 == index1)
		{
			indexMid = index2;
			break;
		}
		
		if(numbers[index1] == numbers[index2] && numbers[index1] == numbers[indexMid])//如果三个元素相等，无法判断是在前还是后，那么只能顺序查找
			return MinInorder(numbers, index1, index2);
		
		
		indexMid = (index1 + index2) / 2;
		if(numbers[indexMid] >= numbers[index1])
			index1 = indexMid;
		else if(numbers[indexMid] <= numbers[index2])
			index2 = indexMid;
	}
	
	
	
}

int MinInorder(int * numbers, int index1, int index2)
{
	int result = numbers[index1];
	for(int i = index1; i < index2; i++)
	{
		if(result > numbers[i])
			result = numbers[i];
	}
	
	return result;
}





